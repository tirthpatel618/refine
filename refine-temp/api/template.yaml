AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: refine-temp-api

Globals:
  Function:
    Timeout: 10
    MemorySize: 256
    Tracing: Active

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization,Origin,Accept'"
        AllowOrigin: "'*'"
  LambdaEgressAll:
      Type: AWS::EC2::SecurityGroupEgress
      Properties:
        GroupId: sg-0878bf7db72d29974   # your Lambda SG
        IpProtocol: -1
        CidrIp: 0.0.0.0/0 
      

  AppFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
      #BuildProperties:
      #  GoBuildFlags: -tags lambda.norpc
    Properties:
      CodeUri: .
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures: [x86_64] 
      VpcConfig:
        SecurityGroupIds:
          - sg-0878bf7db72d29974 
        SubnetIds:
          - subnet-0860d3fbbde060a59 # private subnet A
          - subnet-06945352b99b95b04 # private subnet B

      Environment:
        Variables:
          DB_USER: arn:aws:secretsmanager:us-east-1:512795167537:secret:rds-db-credentials/db-EQOL7FH4SPDD2HGB3H76G43VDE/postgres/1756395922603-cg0308:SecretString:username::
          DB_PASS: arn:aws:secretsmanager:us-east-1:512795167537:secret:rds-db-credentials/db-EQOL7FH4SPDD2HGB3H76G43VDE/postgres/1756395922603-cg0308:SecretString:password::
          DB_HOST: refine-db.cytc2qoyqsw0.us-east-1.rds.amazonaws.com
          DB_NAME: refine
          DB_PORT: "5432"
          DEBUG: "1"
      Events:
        Root:
          Type: Api
          Properties: { Path: /,               Method: GET,  RestApiId: !Ref Api }
        Health:
          Type: Api
          Properties: { Path: /health,         Method: GET,  RestApiId: !Ref Api }
        Problems:
          Type: Api
          Properties: { Path: /api/problems,   Method: POST, RestApiId: !Ref Api }
        Validate:
          Type: Api
          Properties: { Path: /api/validate,   Method: POST, RestApiId: !Ref Api }
        Emails:
          Type: Api
          Properties: { Path: /emails,         Method: POST, RestApiId: !Ref Api }
      #Policies:
      #  - Statement:
      #      - Effect: Allow
      #        Action: secretsmanager:GetSecretValue
      #        Resource: arn:aws:secretsmanager:us-east-1:512795167537:secret:rds-db-credentials/db-EQOL7FH4SPDD2HGB3H76G43VDE/postgres/1756395922603-cg0308

Outputs:
  ApiUrl:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod"
